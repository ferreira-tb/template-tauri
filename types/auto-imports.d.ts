/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
export {}
declare global {
  const computed: (typeof import('vue'))['computed'];
  const computedAsync: (typeof import('@vueuse/core'))['computedAsync'];
  const computedInject: (typeof import('@vueuse/core'))['computedInject'];
  const computedWithControl: (typeof import('@vueuse/core'))['computedWithControl'];
  const css: (typeof import('@manatsu/style'))['css'];
  const customRef: (typeof import('vue'))['customRef'];
  const defineComponent: (typeof import('vue'))['defineComponent'];
  const effectScope: (typeof import('vue'))['effectScope'];
  const h: (typeof import('vue'))['h'];
  const hasInjectionContext: (typeof import('vue'))['hasInjectionContext'];
  const inject: (typeof import('vue'))['inject'];
  const isRef: (typeof import('vue'))['isRef'];
  const markRaw: (typeof import('vue'))['markRaw'];
  const nextTick: (typeof import('vue'))['nextTick'];
  const onActivated: (typeof import('vue'))['onActivated'];
  const onBeforeMount: (typeof import('vue'))['onBeforeMount'];
  const onBeforeUnmount: (typeof import('vue'))['onBeforeUnmount'];
  const onBeforeUpdate: (typeof import('vue'))['onBeforeUpdate'];
  const onDeactivated: (typeof import('vue'))['onDeactivated'];
  const onMounted: (typeof import('vue'))['onMounted'];
  const onScopeDispose: (typeof import('vue'))['onScopeDispose'];
  const onUnmounted: (typeof import('vue'))['onUnmounted'];
  const provide: (typeof import('vue'))['provide'];
  const reactive: (typeof import('vue'))['reactive'];
  const readonly: (typeof import('vue'))['readonly'];
  const ref: (typeof import('vue'))['ref'];
  const shallowReactive: (typeof import('vue'))['shallowReactive'];
  const shallowRef: (typeof import('vue'))['shallowRef'];
  const toRaw: (typeof import('vue'))['toRaw'];
  const toRef: (typeof import('vue'))['toRef'];
  const toValue: (typeof import('vue'))['toValue'];
  const triggerRef: (typeof import('vue'))['triggerRef'];
  const tryOnBeforeMount: (typeof import('@vueuse/core'))['tryOnBeforeMount'];
  const tryOnBeforeUnmount: (typeof import('@vueuse/core'))['tryOnBeforeUnmount'];
  const tryOnMounted: (typeof import('@vueuse/core'))['tryOnMounted'];
  const tryOnScopeDispose: (typeof import('@vueuse/core'))['tryOnScopeDispose'];
  const tryOnUnmounted: (typeof import('@vueuse/core'))['tryOnUnmounted'];
  const tw: (typeof import('@manatsu/style'))['tw'];
  const unref: (typeof import('vue'))['unref'];
  const useAsyncState: (typeof import('@vueuse/core'))['useAsyncState'];
  const useElementSize: (typeof import('manatsu'))['useElementSize'];
  const useIntersectionObserver: (typeof import('@vueuse/core'))['useIntersectionObserver'];
  const useInvoke: (typeof import('@/utils'))['useInvoke'];
  const useLocalStorage: (typeof import('@vueuse/core'))['useLocalStorage'];
  const useMutationObserver: (typeof import('@vueuse/core'))['useMutationObserver'];
  const useResizeObserver: (typeof import('@vueuse/core'))['useResizeObserver'];
  const useRoute: (typeof import('vue-router'))['useRoute'];
  const useRouter: (typeof import('vue-router'))['useRouter'];
  const useSessionStorage: (typeof import('@vueuse/core'))['useSessionStorage'];
  const useStorage: (typeof import('@vueuse/core'))['useStorage'];
  const watch: (typeof import('vue'))['watch'];
  const watchAtMost: (typeof import('@vueuse/core'))['watchAtMost'];
  const watchDeep: (typeof import('@vueuse/core'))['watchDeep'];
  const watchEffect: (typeof import('vue'))['watchEffect'];
  const watchIgnorable: (typeof import('@vueuse/core'))['watchIgnorable'];
  const watchImmediate: (typeof import('@vueuse/core'))['watchImmediate'];
  const watchOnce: (typeof import('@vueuse/core'))['watchOnce'];
  const watchPausable: (typeof import('@vueuse/core'))['watchPausable'];
  const watchPostEffect: (typeof import('vue'))['watchPostEffect'];
  const watchSyncEffect: (typeof import('vue'))['watchSyncEffect'];
  const watchTriggerable: (typeof import('@vueuse/core'))['watchTriggerable'];
  const whenever: (typeof import('@vueuse/core'))['whenever'];
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Component, ComponentInstance, MaybeRefOrGetter, Ref, ShallowRef, VNode } from 'vue';
  import('vue');
  // @ts-ignore
  export type { MaybeArray, MaybePromise, Nullish, PartialNullish } from '@tb-dev/utility-types';
  import('@tb-dev/utility-types');
}
